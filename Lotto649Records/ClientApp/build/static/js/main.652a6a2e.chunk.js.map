{"version":3,"sources":["components/NavMenu.js","components/Layout.js","components/Home.js","App.js","registerServiceWorker.js","index.js"],"names":["NavMenu","props","toggleNavbar","bind","state","collapsed","this","setState","Navbar","className","light","Container","NavbarBrand","tag","Link","to","NavbarToggler","onClick","Collapse","isOpen","navbar","NavItem","NavLink","Component","displayName","name","Layout","children","Home","result","matchedDraws","totalWon","totalCost","number1","number2","number3","number4","number5","number6","errornumber1","errornumber2","errornumber3","errornumber4","errornumber5","errornumber6","alert","processNumbers","postData","handleOnChange","then","data","console","log","url","a","fetch","method","mode","cache","credentials","headers","redirect","referrerPolicy","body","JSON","stringify","response","json","e","errorNumber","target","value","Grid","container","style","width","m","item","xs","md","TextField","required","error","variant","label","size","onChange","Box","sx","mt","Button","color","disabled","Alert","severity","length","List","ListItem","display","map","drawDate","won","paddingLeft","App","exact","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","baseUrl","document","getElementsByTagName","getAttribute","rootElement","getElementById","ReactDOM","render","basename","URL","process","origin","addEventListener","status","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.652a6a2e.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Collapse, Container, Navbar, NavbarBrand, NavbarToggler, NavItem, NavLink } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport './NavMenu.css';\r\n\r\nexport class NavMenu extends Component {\r\n  static displayName = NavMenu.name;\r\n\r\n  constructor (props) {\r\n    super(props);\r\n\r\n    this.toggleNavbar = this.toggleNavbar.bind(this);\r\n    this.state = {\r\n      collapsed: true\r\n    };\r\n  }\r\n\r\n  toggleNavbar () {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed\r\n    });\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <header>\r\n        <Navbar className=\"navbar-expand-sm navbar-toggleable-sm ng-white border-bottom box-shadow mb-3\" light>\r\n          <Container>\r\n            <NavbarBrand tag={Link} to=\"/\">Lotto649Records</NavbarBrand>\r\n            <NavbarToggler onClick={this.toggleNavbar} className=\"mr-2\" />\r\n            <Collapse className=\"d-sm-inline-flex flex-sm-row-reverse\" isOpen={!this.state.collapsed} navbar>\r\n              <ul className=\"navbar-nav flex-grow\">\r\n                <NavItem>\r\n                  <NavLink tag={Link} className=\"text-dark\" to=\"/\">Home</NavLink>\r\n                </NavItem>\r\n              </ul>\r\n            </Collapse>\r\n          </Container>\r\n        </Navbar>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Container } from 'reactstrap';\r\nimport { NavMenu } from './NavMenu';\r\n\r\nexport class Layout extends Component {\r\n  static displayName = Layout.name;\r\n\r\n  render () {\r\n    return (\r\n      <div>\r\n        <NavMenu />\r\n        <Container>\r\n          {this.props.children}\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport {\r\n    TextField,\r\n    Grid,\r\n    Box,\r\n    List,\r\n    ListItem,\r\n    Button\r\n  } from '@material-ui/core';\r\n\r\n  import {\r\n    Alert\r\n  } from '@mui/material';\r\n\r\nexport class Home extends Component {\r\n    static displayName = Home.name;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            result: {\r\n                matchedDraws: [],\r\n                totalWon: 0,\r\n                totalCost: 0,\r\n            },\r\n            number1: 0,\r\n            number2: 0,\r\n            number3: 0,\r\n            number4: 0,\r\n            number5: 0,\r\n            number6: 0,  \r\n            errornumber1: false,\r\n            errornumber2: false,\r\n            errornumber3: false,\r\n            errornumber4: false,\r\n            errornumber5: false,\r\n            errornumber6: false,  \r\n            alert: false       \r\n        };\r\n\r\n        this.processNumbers = this.processNumbers.bind(this);\r\n        this.postData = this.postData.bind(this);  \r\n        this.handleOnChange = this.handleOnChange.bind(this);     \r\n    }\r\n\r\n    processNumbers() {\r\n        // Validate inputs\r\n\r\n        // Check if all values are >0 and <= 49, users may click the button without even putting any values to the inputs.\r\n        // In this case, your input validations won't catch empty inputs.\r\n\r\n        if(\r\n            this.state.number1 < 1 || this.state.number1 > 49 ||\r\n            this.state.number2 < 1 || this.state.number2 > 49 || \r\n            this.state.number3 < 1 || this.state.number3 > 49 || \r\n            this.state.number4 < 1 || this.state.number4 > 49 ||  \r\n            this.state.number5 < 1 || this.state.number5 > 49 || \r\n            this.state.number6 < 1 || this.state.number6 > 49 \r\n        ){\r\n            this.setState({alert: true});\r\n        }\r\n        else{\r\n            this.setState({alert: false});\r\n        }\r\n\r\n        this.postData('api/Lotto649Records/ProcessNumbers',\r\n            {\r\n                \"number1\": this.state.number1,\r\n                \"number2\": this.state.number2,\r\n                \"number3\": this.state.number3,\r\n                \"number4\": this.state.number4,\r\n                \"number5\": this.state.number5,\r\n                \"number6\": this.state.number6\r\n            })\r\n            .then(data => {\r\n                this.setState({\r\n                    result: data,\r\n                    totalWon: 0,\r\n                    totalCost: 0,\r\n                });\r\n\r\n                console.log(this.state.result?.totalWon);\r\n            });\r\n    }\r\n\r\n    async postData(url, data) {\r\n        const response = await fetch(url, {\r\n            method: 'POST',\r\n            mode: 'cors',\r\n            cache: 'no-cache',\r\n            credentials: 'same-origin',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            redirect: 'follow',\r\n            referrerPolicy: 'no-referrer',\r\n            body: JSON.stringify(data)\r\n        });\r\n        return response.json();\r\n    }\r\n\r\n    handleOnChange(e) {\r\n        // Get state name that represents error for the input control\r\n        const errorNumber = 'error' + e.target.name;\r\n\r\n        // Check if value is [1,49]\r\n        if(e.target?.value < 1 || e.target?.value > 49){ \r\n            //If input is not valid, make error field for that input true.          \r\n            this.setState({[errorNumber]: true});\r\n        }\r\n        else{\r\n            //Check for duplicates\r\n            if( (e.target?.value === this.state.number1 && e.target.name !== 'number1') ||\r\n                (e.target?.value === this.state.number2 && e.target.name !== 'number2') ||\r\n                (e.target?.value === this.state.number3 && e.target.name !== 'number3') ||\r\n                (e.target?.value === this.state.number4 && e.target.name !== 'number4') ||\r\n                (e.target?.value === this.state.number5 && e.target.name !== 'number5') ||\r\n                (e.target?.value === this.state.number6 && e.target.name !== 'number6') \r\n                )\r\n                {\r\n                    // Duplicates not allowed\r\n                    this.setState({[errorNumber]: true});   \r\n                }\r\n            else{\r\n                //Save numbers in appropriate state\r\n                this.setState({[errorNumber]: false});\r\n                this.setState({[e.target.name]: e.target?.value});\r\n            }\r\n        }\r\n      }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"wrapper\">\r\n                <h1>Check your numbers</h1>\r\n\r\n                <h6>Please enter Six numbers (between 1 and 49) below and we will check them against every 6/49 draw since 1981, and calculate your net winnings(or losings).</h6>\r\n                <h6>Only numbers from 1 - 49 are valid. No duplicates are allowed.</h6>\r\n                <Grid container  style ={{width: '70%', m:3 }}>\r\n                    <Grid item xs={12} md={2}>\r\n                    <TextField\r\n                      required\r\n                      error={this.state.errornumber1}\r\n                      name=\"number1\"\r\n                      variant=\"outlined\"\r\n                      label=\"Number 1\"\r\n                      size=\"small\"\r\n                      style ={{width: '100px'}}\r\n                      onChange={this.handleOnChange}\r\n                    />\r\n                    </Grid>\r\n                    <Grid item xs={12} md={2}>\r\n                      <TextField\r\n                        required\r\n                        error={this.state.errornumber2}\r\n                        name=\"number2\"\r\n                        variant=\"outlined\"\r\n                        label=\"Number 2\"\r\n                        size=\"small\"\r\n                        style ={{width: '100px'}}\r\n                        onChange={this.handleOnChange}\r\n                      />\r\n                    </Grid>\r\n                   <Grid item xs={12} md={2}>\r\n                    <TextField\r\n                        required\r\n                        error={this.state.errornumber3}\r\n                        name=\"number3\"\r\n                        variant=\"outlined\"\r\n                        label=\"Number 3\"\r\n                        size=\"small\"\r\n                        style ={{width: '100px'}}\r\n                        onChange={this.handleOnChange}\r\n                     />\r\n                    </Grid>\r\n                  <Grid item xs={12} md={2}>\r\n                    <TextField\r\n                        required\r\n                        error={this.state.errornumber4}\r\n                        name=\"number4\"\r\n                        variant=\"outlined\"\r\n                        label=\"Number 4\"\r\n                        size=\"small\"\r\n                        style ={{width: '100px'}}\r\n                        onChange={this.handleOnChange}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} md={2}>\r\n                    <TextField\r\n                        required\r\n                        error={this.state.errornumber5}\r\n                        name=\"number5\"\r\n                        variant=\"outlined\"\r\n                        label=\"Number 5\"\r\n                        size=\"small\"\r\n                        style ={{width: '100px'}}\r\n                        onChange={this.handleOnChange}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} md={2}>\r\n                    <TextField\r\n                        required\r\n                        error={this.state.errornumber6}\r\n                        name=\"number6\"\r\n                        variant=\"outlined\"\r\n                        label=\"Number 6\"\r\n                        size=\"small\"\r\n                        style ={{width: '100px'}}\r\n                        onChange={this.handleOnChange}\r\n                    />\r\n                 </Grid>   \r\n                </Grid>\r\n                <Box\r\n                 sx={{ mt: 4 }}\r\n                > \r\n                   <Button \r\n                      color=\"primary\"\r\n                      variant=\"contained\" \r\n                      disabled={\r\n                        this.state.errornumber1||\r\n                        this.state.errornumber2||\r\n                        this.state.errornumber3||\r\n                        this.state.errornumber4||\r\n                        this.state.errornumber5||\r\n                        this.state.errornumber6\r\n                        }\r\n                      onClick={this.processNumbers}\r\n                    >\r\n                     Check the Numbers\r\n                    </Button>\r\n                    {this.state.alert &&  <Box\r\n                        sx={{ mt: 3 }}\r\n                    > \r\n                      <Alert \r\n                        severity=\"error\"\r\n                      >\r\n                        Values can only be from 1 - 46. Each number has to be unique.\r\n                     </Alert>\r\n                    </Box>}\r\n                </Box>\r\n                {(this.state.result?.matchedDraws?.length > 0) && <Box\r\n                  sx={{ mt: 4 }}\r\n                >\r\n                    <List>\r\n                        <ListItem>\r\n                        <div \r\n                            style={{\r\n                                display: 'block',\r\n                            }}>\r\n                                {this.state.result?.matchedDraws?.map((m) =>\r\n                            <div>\r\n                                {m.drawDate} won ${m.won}\r\n                            </div>\r\n                            )}\r\n                        </div>\r\n                        </ListItem>\r\n                    </List>\r\n                    <div \r\n                        style={{\r\n                            display: 'block',\r\n                            paddingLeft:'20px'\r\n                        }}> \r\n                        <div>Total won: ${this.state.result?.totalWon}</div>\r\n                        <div>You spent: ${this.state.result?.totalCost}</div>\r\n                        <div>Net won/loss: ${this.state?.result?.totalWon > this.state?.result?.totalCost \r\n                            ? this.state?.result?.totalWon - this.state?.result?.totalCost\r\n                            : this.state?.result?.totalCost - this.state?.result?.totalWon}\r\n                        </div>\r\n                    </div>\r\n                </Box>}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Route } from 'react-router';\r\nimport { Layout } from './components/Layout';\r\nimport { Home } from './components/Home';\r\n\r\nimport './custom.css'\r\n\r\nexport default class App extends Component {\r\n  static displayName = App.name;\r\n\r\n  render () {\r\n    return (\r\n      <Layout>\r\n        <Route exact path='/' component={Home} />\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.1/8 is considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport default function register () {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW (swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker (swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister () {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import 'bootstrap/dist/css/bootstrap.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nconst baseUrl = document.getElementsByTagName('base')[0].getAttribute('href');\r\nconst rootElement = document.getElementById('root');\r\n\r\nReactDOM.render(\r\n  <BrowserRouter basename={baseUrl}>\r\n    <App />\r\n  </BrowserRouter>,\r\n  rootElement);\r\n\r\nregisterServiceWorker();\r\n\r\n"],"sourceRoot":""}